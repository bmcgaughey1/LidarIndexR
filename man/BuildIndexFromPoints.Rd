% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LidarIndexR.R
\name{BuildIndexFromPoints}
\alias{BuildIndexFromPoints}
\title{LidarIndexR -- Create spatial index by reading LAS/LAZ file headers}
\usage{
BuildIndexFromPoints(
  baseURL,
  folderName,
  outputFile,
  projString = NULL,
  outputCRS = NULL,
  fileType = "\\\\.las|\\\\.laz",
  dirFormat = "ls",
  dimensionThreshold = 50000,
  appendInfo = NULL,
  rebuild = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{baseURL}{URL for a folder on a remote host. Trailing slash should \emph{not}
be included.}

\item{folderName}{Folder name on the \code{baseURL} containing LAS/LAZ files.}

\item{outputFile}{Full path and filename on the local file system for the index
file.}

\item{projString}{A valid projection string that can be used with the \code{crs}
parameter in \code{st_sf}. \code{projString} should represent the projection
pf the point data. If using EPSG codes, do not enclose the EPSG number in quotes.}

\item{outputCRS}{A valid projection string that can be used with the \code{crs}
parameter in \code{st_transform} to reproject the index.}

\item{fileType}{Any valid string for the pattern parameter in \code{grep()}.
"$" will be appended to the string to search for file/folder names ending
with values in \code{fileType}.}

\item{dirFormat}{String indicating the expected directory format for the
\code{URL}. Valid values are "dir" if the URL returns the Date, Time,
Attribute/Size, and file name; "ls" if the URL returns directory
information similar to the UNIX \code{ls -al} command; or "" if you
want the function to try to determine the directory format.}

\item{dimensionThreshold}{Size threshold used to omit files from the index.
This is intended to help omit invalid LAS.LAZ files from the index. If
the height or width of the point tile exceeds the threshold, the tile
will ne omitted.}

\item{appendInfo}{Data frame (single row) with values to append to each
feature in the return \code{sf} object. If NULL, no information is appended.
If \code{appendInfo} is \code{sf} object, the geometry will be removed
before appending to each feature.}

\item{rebuild}{Boolean. If TRUE, the index is always created. If FALSE,
the index is only created if it does not already exist.}

\item{quiet}{Boolean to control display of status information. If TRUE,
information is \emph{not} displayed. Otherwise, status information is displayed.}
}
\value{
Boolean indicating success (TRUE) or failure (FALSE).
}
\description{
Longer description
}
\examples{
\dontrun{
BuildIndexFromPoints()
}
}
